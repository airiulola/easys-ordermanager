name: Easys Order Manager

on:
  push:
    branches: [ master ]
  release:
    types: [published]

jobs:

  build:
    # check if maybe we can use ubuntu-latest
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        python-version: [3.8]
        django-version: [2.2.10]
#         python-version: [3.6, 3.7, 3.8]
#         django-version: [1.11.28, 2.1.15, 2.2.10]

    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -q Django==${{ matrix.django-version }}
        pip install .
        pip install -r requirements-test.txt
 
    - name: Lint with flake8
      run: |
        flake8 easys_ordermanager

    - name: Test and coverage
      run: |
        coverage run --source=easys_ordermanager manage.py test
        
  publish:
    runs-on: ubuntu-16.04
    # only if build job was finished with success
#     if: success() && github.event_name == 'release' && github.event.action == 'published'
#     if: success()
    needs: [build]
    strategy:
      matrix:
        python-version: [3.6]
        django-version: [2.2.10]
    
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          
      - name: Publish to Pipy
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -c "print('I should have published to pipy')"
#         python setup.py sdist bdist_wheel
#         twine upload dist/*
